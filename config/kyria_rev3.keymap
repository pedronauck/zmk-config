/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&led_strip {
    chain-length = <6>;

    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

&mt {
    tapping-term-ms = <500>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   DEL  |
            // |  LCTRL  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | ESC | LAYER 1 |  | LAYER 1 | ESC |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | CTRL  | ALT  | CMD  |  SPACE  |   BSPC   |  |   RET   |  SPACE  | RET  | BSPC  | R-ALT |

            bindings = <
&mt TILDE TAB     &mt EXCLAMATION Q  &mt AT_SIGN W  &mt HASH E    &mt DOLLAR R  &mt PERCENT T                                                       &mt CARET Y       &mt AMPERSAND U    &mt ASTERISK I       &mt LEFT_PARENTHESIS O   &mt RIGHT_PARENTHESIS P  &mt NON_US_BACKSLASH PIPE
&kp LEFT_CONTROL  &mt UNDERSCORE A   &mt EQUAL S    &mt MINUS D   &mt PLUS F    &mt GRAVE G                                                         &kp H             &kp J              &kp K                &kp L                    &mt COLON SEMICOLON      &mt DOUBLE_QUOTES SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z              &kp X          &kp C         &kp V         &kp B          &kp ESCAPE  &mo 2  &mo 2  &kp ESC                    &mt LEFT_BRACE N  &mt RIGHT_BRACE M  &mt LESS_THAN COMMA  &mt GREATER_THAN PERIOD  &mt QUESTION SLASH       &kp RIGHT_SHIFT
                                                    &kp LEFT_ALT  &kp LGUI      &kp SPACE      &kp BSPC    &to 1  &to 1  &kp RS(RA(RIGHT_CONTROL))  &kp RETURN        &none              &none
            >;
        };

        symbol_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT                                   &kp CARET                    &kp AMPERSAND                  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&kp LCTRL  &kp UNDERSCORE   &kp EQUAL    &kp MINUS  &kp PLUS    &kp GRAVE                                     &kp LEFT_ARROW               &kp DOWN_ARROW                 &kp UP_ARROW   &kp RIGHT_ARROW       &kp COLON              &kp DOUBLE_QUOTES
&kp LSHFT  &none            &none        &none      &none       &none        &kp ESC   &mo 2  &mo 2  &kp ESC  &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET  &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION           &kp NON_US_BACKSLASH
                                         &kp LALT   &kp LGUI    &kp SPACE    &kp BSPC  &to 0  &to 0  &none    &kp ENTER                    &none                          &none
            >;
        };

        number_layer {
            bindings = <
&none  &none  &kp F9  &kp F10  &kp F11  &kp F12                              &kp N7  &kp N8  &kp N9  &kp N0  &none  &none
&none  &none  &kp F5  &kp F6   &kp F7   &kp F8                               &kp N4  &kp N5  &kp N6  &none   &none  &none
&none  &none  &kp F1  &kp F2   &kp F3   &kp F4   &none  &none  &none  &none  &kp N1  &kp N2  &kp N3  &none   &none  &none
                      &none    &none    &none    &none  &none  &none  &none  &none   &none   &none
            >;
        };

        vim_layer {
            bindings = <
&none  &none  &none  &none  &none  &none                              &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                              &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
