/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&led_strip {
    chain-length = <6>;

    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   DEL  |
            // |  LCTRL  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | ESC | LAYER 1 |  | LAYER 1 | ESC |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | CTRL  | ALT  | CMD  |  SPACE  |   BSPC   |  |   RET   |  SPACE  | RET  | BSPC  | R-ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E   &kp R         &kp T                                                                      &kp Y  &kp U   &kp I      &kp O       &kp P          &kp DELETE
&kp LEFT_CONTROL  &kp A  &kp S  &kp D   &kp F         &kp G                                                                      &kp H  &kp J   &kp K      &kp L       &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C   &kp V         &kp B             &kp ESCAPE  &trans         &trans             &kp ESC    &kp N  &kp M   &kp COMMA  &kp PERIOD  &kp SLASH      &kp RIGHT_SHIFT
                                &tog 1  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE   &kp BACKSPACE  &kp RC(RA(RIGHT))  &kp ENTER  &to 2  &tog 1  &none
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        symbol_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT                                      &kp CARET       &kp AMPERSAND   &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans     &trans           &trans       &trans    &kp LEFT_BRACE  &kp RIGHT_BRACE                                  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW       &kp COLON              &kp DOUBLE_QUOTES
&trans     &trans           &trans       &trans    &kp LBKT        &kp RBKT         &trans  &trans  &trans  &trans  &trans          &trans          &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION           &kp NON_US_BACKSLASH
                                         &trans    &trans          &trans           &trans  &trans  &trans  &trans  &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        number_layer {
            bindings = <
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12                                  &kp N7  &kp N8  &kp N9  &kp N0  &trans  &trans
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8                                   &kp N4  &kp N5  &kp N6  &trans  &trans  &trans
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans  &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans  &trans
                        &none    &trans   &trans   &trans  &trans  &trans  &trans  &to 0   &trans  &trans
            >;
        };
    };
};
